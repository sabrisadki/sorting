    FUNCTION linear_search(tab : ARRAY_OF INTEGER, elt : INTEGER) : INTEGER
    VAR
    j : INTEGER;
    BEGIN
    j := 0;
    WHILE (j< tab.length) DO
        IF (tab[j] = elt) THEN
            RETURN j; // element is found let's break the loop and return the index
        END_IF
        j := j+1; // update the index
    END_WHILE
    // we reached the end of array without finding the element
    RETURN -1 ;// means that we did not find the element
    END

    FUNCTION binary_search(arr : ARRAY_OF INTEGER) : INTEGER
    VAR
    left, right, mid : INTEGER;
    BEGIN
    left := 0;
    right := arr.length-1;
    WHILE (left < right) DO
        mid := left + (right - left)/2;
        // check if x is present in the mid
        IF (arr[mid] = x) THEN
            RETURN mid;
        END_IF
        // if x grater, ignore the left half
        IF (arr[mid] < x) THEN
            left := mid+1;
        ELSE
        // if x is smaller, ignore the right half
        right := mid-1;
        END_IF
    END_WHILE
    // if we reached here then the element is not present
    RETURN -1  ;
    END